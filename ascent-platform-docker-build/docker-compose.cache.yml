version: '3'

services:
  redis-master:
    image: ascent/redis-sentinel
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == worker
          - node.labels.type == master
    environment:
        - REDIS_START_COMMAND=redis-server --appendonly no --save "" --repl-diskless-sync yes --requirepass "${SENTINEL-REDIS_PASSWORD}" --masterauth "${SENTINEL-REDIS_PASSWORD}"
    networks:
      - ascentnet
  # Slave
  redis-slave:
    image: ascent/redis-sentinel
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == worker
          - node.labels.type == slave
    environment:
        - REDIS_START_COMMAND=redis-server --appendonly no --save "" --repl-diskless-sync yes --requirepass "${SENTINEL-REDIS_PASSWORD}" --masterauth "${SENTINEL-REDIS_PASSWORD}"
    networks:
      - ascentnet
  redis-sentinel:
    image: ascent/redis-sentinel
    environment:
      - SENTINEL_QUORUM=2
      - SENTINEL_DOWN_AFTER=5000
      - SENTINEL_FAILOVER=15000
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    networks:
      - ascentnet
    depends_on:
      - redis-master
  redis-sentinel2:
    image: ascent/redis-sentinel
    environment:
      - SENTINEL_QUORUM=2
      - SENTINEL_DOWN_AFTER=5000
      - SENTINEL_FAILOVER=15000
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker
    networks:
      - ascentnet
    depends_on:
      - redis-master
  redis-sentinel3:
    image: ascent/redis-sentinel
    environment:
      - SENTINEL_QUORUM=2
      - SENTINEL_DOWN_AFTER=5000
      - SENTINEL_FAILOVER=15000
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker
    networks:
      - ascentnet
    depends_on:
      - redis-master
networks:
  ascentnet:
    driver: overlay
